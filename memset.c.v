(* Generated by Frama-C WP *)

Goal typed_cast_memset_loop_invariant_3_established.
Hint established,memset.
Proof.
  Require Import Lia.
  intros.
  unfold x_1.
  unfold land.
  simpl.
  unfold x.

  assert ((land 3 (to_uint32 (- int_of_addr a))) <= 3)%Z. {
    apply uint_land_range; lia.
  }

  assert (i - land 3 (to_uint32 (- int_of_addr a)) >= 0)%Z. {
    auto with zarith.
  }

  assert (i - land 3 (to_uint32 (- int_of_addr a)) <= i)%Z. {
    apply Z.le_sub_nonneg.
    apply uint_land_range.
    lia.
  }

  assert  (Zbits.land (i - land 3 (to_uint32 (- int_of_addr a))) 4294967292 <=
          (i - land 3 (to_uint32 (- int_of_addr a))))%Z. {
    apply Zbits.uint_land_range.
    auto with zarith.
  }

  assert (is_uint32 (i - land 3 (to_uint32 (- int_of_addr a)))). {
    unfold is_uint32 in *.
    lia.
  }

  split.
  + rewrite id_uint32. { rewrite land_commut; try lia. } auto.
  + rewrite id_uint32. { apply Zbits.uint_land_range; lia.  } auto.
(* auto with zarith. *)
Qed.

Goal typed_cast_memset_loop_invariant_established.
Hint established,memset.
Proof.
  Require Import Lia.
  intros.
  unfold x_1.
  unfold land.
  simpl.
  unfold x.

  assert ((land 3 (to_uint32 (- int_of_addr a))) <= 3)%Z. {
    apply uint_land_range; lia.
  }

  assert (i - land 3 (to_uint32 (- int_of_addr a)) >= 0)%Z. {
    auto with zarith.
  }

  assert (i - land 3 (to_uint32 (- int_of_addr a)) <= i)%Z. {
    apply Z.le_sub_nonneg.
    apply uint_land_range.
    lia.
  }

  assert  (Zbits.land (i - land 3 (to_uint32 (- int_of_addr a))) 4294967292 <=
          (i - land 3 (to_uint32 (- int_of_addr a))))%Z. {
    apply Zbits.uint_land_range.
    auto with zarith.
  }

  assert (is_uint32 (i - land 3 (to_uint32 (- int_of_addr a)))). {
    unfold is_uint32 in *.
    lia.
  }

  split.
  + rewrite id_uint32. { rewrite land_commut; try lia. } auto.
  + rewrite id_uint32. { apply Zbits.uint_land_range; lia.  } auto.
Qed.


